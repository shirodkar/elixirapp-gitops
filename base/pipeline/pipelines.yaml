apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: elixirapp
    app.kubernetes.io/name: elixirapp
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    pipeline.openshift.io/strategy: docker
    pipeline.openshift.io/type: kubernetes
  name: elixirapp
spec:
  params:
    - default: elixirapp
      name: APP_NAME
      type: string
    - default: 'https://github.com/shirodkar/elixirapp.git'
      name: GIT_REPO
      type: string
    - default: main
      name: GIT_REVISION
      type: string
    - default: 'image-registry.openshift-image-registry.svc:5000'
      name: REGISTRY_URL
      type: string
    - default: $(context.pipelineRun.namespace)
      name: NAMESPACE
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: false
      name: DEPLOY
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: URL
          value: $(params.GIT_REPO)
        - name: REVISION
          value: $(params.GIT_REVISION)
        - name: SUBDIRECTORY
          value: ''
        - name: DELETE_EXISTING
          value: 'true'
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: output
          workspace: workspace
    - name: build
      params:
        - name: IMAGE
          value: $(params.REGISTRY_URL)/$(params.NAMESPACE)/elixirapp
        - name: TLS_VERIFY
          value: 'false'
        - name: CONTEXT
          value: $(params.PATH_CONTEXT)
      runAfter:
        - fetch-repository
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: buildah
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      workspaces:
        - name: source
          workspace: workspace
    - name: deploy
      params:
        - name: SCRIPT
          value: oc rollout status deploy/$(params.APP_NAME)
      runAfter:
        - build
      taskRef:
        params:
          - name: kind
            value: task
          - name: name
            value: openshift-client
          - name: namespace
            value: openshift-pipelines
        resolver: cluster
      when:
        - input: $(params.DEPLOY)
          operator: in
          values:
            - 'true'
  workspaces:
    - name: workspace
